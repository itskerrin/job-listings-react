{"version":3,"sources":["components/JobCard.js","App.js","index.js"],"names":["JobCard","company","position","postedAt","location","logo","contract","languages","tools","featured","isNew","role","level","handleKeywordClick","keywords","className","src","alt","map","keyword","onClick","App","useState","jobs","setJobs","filters","setFilters","useEffect","data","filteredJobs","filter","length","some","includes","f","handleRemoveFilter","job","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"07FAwDeA,EAtDC,SAAC,GAcV,IAbLC,EAaI,EAbJA,QACAC,EAYI,EAZJA,SACAC,EAWI,EAXJA,SACAC,EAUI,EAVJA,SACAC,EASI,EATJA,KACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,MACAC,EAKI,EALJA,SACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEMC,EAAQ,sBAAOP,GAAP,YAAqBC,GAArB,CAA4BG,EAAMC,IAEhD,OACE,sBAAKG,UAAWN,EAAW,0BAA4B,iBAAvD,UACE,8BACE,qBAAKO,IAAKX,EAAMY,IAAKhB,EAASc,UAAU,kBAE1C,gCACE,gCACE,sBAAMA,UAAU,UAAhB,SAA2Bd,IAC1BS,GAAS,wBAAQK,UAAU,mBAAlB,kBACTN,GACC,wBAAQM,UAAU,4BAAlB,yBAGJ,mBAAGA,UAAU,WAAb,SAAyBb,IACzB,oBAAGa,UAAU,UAAb,UACGZ,EADH,WACgBG,EADhB,WAC6BF,QAG/B,oBAAIW,UAAU,YACd,qBAAKA,UAAU,WAAf,SACGD,EACGA,EAASI,KAAI,SAACC,GAAD,OACX,wBACEJ,UAAU,cAEVK,QAAS,kBAAMP,EAAmBM,IAHpC,SAKGA,GAHIA,MAMT,S,QCyCGE,MArFf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KAIbC,qBAAU,WACRH,EAAQI,OACP,IAEH,IAQMC,EAAeN,EAAKO,QARF,SAAC,GAAuC,IAArCnB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOJ,EAAuB,EAAvBA,MAAOD,EAAgB,EAAhBA,UAC7C,OAAuB,IAAnBkB,EAAQM,QAGE,CAAIpB,EAAMC,GAAV,mBAAoBJ,GAApB,YAA8BD,IAC5ByB,MAAK,SAACb,GAAD,OAAaM,EAAQQ,SAASd,SAM/CN,EAAqB,SAACM,GACtBM,EAAQQ,SAASd,IACrBO,EAAW,GAAD,mBAAKD,GAAL,CAAcN,MAW1B,OACE,sBAAKJ,UAAU,MAAf,UAEE,yBAAQA,UAAU,aAAlB,UACE,qBACEC,IAAI,8EACJC,IAAI,iBACJF,UAAU,mBAEZ,qBACEC,IAAI,6EACJC,IAAI,iBACJF,UAAU,qBAIbU,EAAQM,OAAS,GAChB,sBAAKhB,UAAU,mBAAf,UACE,qBAAKA,UAAU,cAAf,SACGU,EAAQP,KAAI,SAACY,GAAD,OACX,mCAEE,wBACEf,UAAU,aACVK,QAAS,kBAhCE,SAACU,GAC1BJ,EAAWD,EAAQK,QAAO,SAACI,GAAD,OAAOA,IAAMJ,MA+BVK,CAAmBL,IAFpC,SAIGA,WAMT,wBAAQV,QApCQ,WACtBM,EAAW,KAmC6BX,UAAU,YAA5C,sBAMJ,qBAAKA,UAAU,WAAf,SACGc,EAAaX,KAAI,SAACkB,GACjB,OACE,cAAC,EAAD,2BAEMA,GAFN,IAGEvB,mBAAoBA,IAFfuB,EAAIC,aC1EvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.48b23506.chunk.js","sourcesContent":["import '../index.css';\n\nconst JobCard = ({\n  company,\n  position,\n  postedAt,\n  location,\n  logo,\n  contract,\n  languages,\n  tools,\n  featured,\n  isNew,\n  role,\n  level,\n  handleKeywordClick,\n}) => {\n  const keywords = [...languages, ...tools, role, level];\n\n  return (\n    <div className={featured ? 'flex-container featured' : 'flex-container'}>\n      <div>\n        <img src={logo} alt={company} className=\"company-img\" />\n      </div>\n      <div>\n        <div>\n          <span className=\"company\">{company}</span>\n          {isNew && <button className=\"new new-featured\">New!</button>}\n          {featured && (\n            <button className=\"featured-job new-featured\">Featured</button>\n          )}\n        </div>\n        <p className=\"position\">{position}</p>\n        <p className=\"details\">\n          {postedAt} • {contract} • {location}\n        </p>\n      </div>\n      <hr className=\"divider\"></hr>\n      <div className=\"keywords\">\n        {keywords\n          ? keywords.map((keyword) => (\n              <button\n                className=\"keyword-btn\"\n                key={keyword}\n                onClick={() => handleKeywordClick(keyword)}\n              >\n                {keyword}\n              </button>\n            ))\n          : ''}\n        {/* checks if there are any keywords in array and returns span */}\n      </div>\n    </div>\n  );\n};\n\nexport default JobCard;\n","import { useState, useEffect } from 'react';\nimport JobCard from './components/JobCard';\nimport { data } from './data.json';\nimport './index.css';\n\nfunction App() {\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => {\n    setJobs(data);\n  }, []);\n\n  const filterByKeyword = ({ role, level, tools, languages }) => {\n    if (filters.length === 0) {\n      return true; // if no keywords clicked, display all jobs\n    }\n    const keywords = [role, level, ...tools, ...languages];\n    return keywords.some((keyword) => filters.includes(keyword));\n  };\n\n  const filteredJobs = jobs.filter(filterByKeyword);\n\n  // Event Handlers\n  const handleKeywordClick = (keyword) => {\n    if (filters.includes(keyword)) return;\n    setFilters([...filters, keyword]);\n  };\n\n  const handleRemoveFilter = (filter) => {\n    setFilters(filters.filter((f) => f !== filter));\n  };\n\n  const clearAllFilters = () => {\n    setFilters([]);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Header */}\n      <header className=\"header-img\">\n        <img\n          src=\"https://itskerrin.github.io/job-listings-react/images/bg-header-desktop.svg\"\n          alt=\"Desktop Header\"\n          className=\"desktop-header\"\n        />\n        <img\n          src=\"https://itskerrin.github.io/job-listings-react/images/bg-header-mobile.svg\"\n          alt=\"Desktop Header\"\n          className=\"mobile-header\"\n        />\n      </header>\n      {/* Filters */}\n      {filters.length > 0 && (\n        <div className=\"filter-container\">\n          <div className=\"all-filters\">\n            {filters.map((filter) => (\n              <>\n                {/* Display filter */}\n                <button\n                  className=\"filter-btn\"\n                  onClick={() => handleRemoveFilter(filter)}\n                >\n                  {filter}\n                </button>\n              </>\n            ))}\n          </div>\n          {/* Clear */}\n          <button onClick={clearAllFilters} className=\"clear-btn\">\n            Clear\n          </button>\n        </div>\n      )}\n      {/* Display job listings */}\n      <div className=\"listings\">\n        {filteredJobs.map((job) => {\n          return (\n            <JobCard\n              key={job.id}\n              {...job}\n              handleKeywordClick={handleKeywordClick}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}